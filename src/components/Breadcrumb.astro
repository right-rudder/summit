---
interface BreadcrumbItem {
  name: string;
  href: string;
}

interface Props {
  items: BreadcrumbItem[];
  className?: string;
}

const { items, className = "" } = Astro.props;

// Generate structured data for breadcrumbs
const breadcrumbStructuredData = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  itemListElement: items.map((item, index) => ({
    "@type": "ListItem",
    position: index + 1,
    name: item.name,
    item: `${Astro.site}${item.href.startsWith("/") ? item.href.slice(1) : item.href}`,
  })),
};
---

<!-- Breadcrumb Structured Data -->
<script
  type="application/ld+json"
  set:html={JSON.stringify(breadcrumbStructuredData)}
/>

<!-- Breadcrumb Navigation -->
<nav class={`flex ${className}`} aria-label="Breadcrumb">
  <ol class="inline-flex items-center space-x-1 md:space-x-3">
    {
      items.map((item, index) => (
        <li class="inline-flex items-center">
          {index > 0 && (
            <svg
              class="w-3 h-3 text-gray-400 mx-1"
              aria-hidden="true"
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 6 10"
            >
              <path
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="m1 9 4-4-4-4"
              />
            </svg>
          )}
          {index === items.length - 1 ? (
            <span
              class="text-sm font-medium text-gray-500 dark:text-gray-400"
              aria-current="page"
            >
              {item.name}
            </span>
          ) : (
            <a
              href={item.href}
              class="inline-flex items-center text-sm font-medium text-gray-700 hover:text-red-600 dark:text-gray-400 dark:hover:text-white"
            >
              {index === 0 && (
                <svg
                  class="w-3 h-3 mr-2.5"
                  aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg"
                  fill="currentColor"
                  viewBox="0 0 20 20"
                >
                  <path d="m19.707 9.293-2-2-7-7a1 1 0 0 0-1.414 0l-7 7-2 2a1 1 0 0 0 1.414 1.414L2 10.414V18a2 2 0 0 0 2 2h3a1 1 0 0 0 1-1v-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v4a1 1 0 0 0 1 1h3a2 2 0 0 0 2-2v-7.586l.293.293a1 1 0 0 0 1.414-1.414Z" />
                </svg>
              )}
              {item.name}
            </a>
          )}
        </li>
      ))
    }
  </ol>
</nav>
